#include <iostream>
#include <vector>
using namespace std;

vector<int> v[1024];     //存边
int isconnect[1024][1024];  //存发送的信息

void dfs(int u, int visit[], int cur)  
{
	visit[u] = 1;   //标记访问过的点 
	isconnect[u][cur] = isconnect[cur][u] = 1;  //互相知道
	for (int i = 0; i < v[u].size(); ++i)   //dfs
	{
		if (!visit[v[u][i]])    //如果这个部门没有访问过
			dfs(v[u][i], visit, cur);    //从这个部门搜索
	}
}

int n, m;   //n个点 m条边
int s, e;   //输入时候的起点，终点

int main()
{
	cin >> n >> m;
	for (int i = 0; i < m; i++)   //输入m条边
	{
		cin >> s >> e;
		v[s].push_back(e);     //存边
	}
	for (int i = 1; i <= n; i++)    //对于n个点
	{
		int visit[1024] = { 0 };    //每次新建一个visit 
	
		dfs(i, visit, i);	//对于每个点进行一次dfs搜索 
	}
	int total = 0;
	for (int i = 1; i <= n; i++)
	{
		int j;
		for (j = 1; j <= n; j++)
		{
			if (isconnect[i][j] == 0)
				break;
		}
		if (j == n + 1)
			++total;
	}
	cout << total << endl;
    return 0;
}
